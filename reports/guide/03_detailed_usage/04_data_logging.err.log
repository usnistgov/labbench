Traceback (most recent call last):
  File "/Users/dkuester/Documents/src/labbench/.venv/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/dkuester/Documents/src/labbench/.venv/lib/python3.12/site-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/dkuester/Documents/src/labbench/.venv/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/asyncio/base_events.py", line 684, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/Users/dkuester/Documents/src/labbench/.venv/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/Users/dkuester/Documents/src/labbench/.venv/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/dkuester/Documents/src/labbench/.venv/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import sys
sys.path.insert(0,'..')
import labbench as lb
import numpy as np
import pandas as pd

class EmulatedInstrument(lb.EmulatedVISADevice):
    """ This "instrument" makes mock data and instrument states to
        demonstrate we can show the process of setting
        up a measurement.
    """
    class state (lb.EmulatedVISADevice.state):
        initiate_continuous:bool = attr.property(key='INIT:CONT')
        output_trigger:bool = attr.property(key='OUTP:TRIG')
        sweep_aperture:float = attr.property(min=20e-6, max=200e-3,help='s')
        frequency:float = attr.property(min=10e6, max=18e9,step=1e-3,help='Hz')

    def trigger(self):
        """ This would tell the instrument to start a measurement
        """
        pass
    
    def fetch_trace(self, N=1001):
        """ Generate N points of junk data as a pandas series.
        """
        values = np.random.normal(size=N)
        index = np.linspace(0,self.state.sweep_aperture,N)
        series = pd.Series(values,index=index,name='voltage')
        series.index.name = 'time'
        return series
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mAttributeError[0m                            Traceback (most recent call last)
Cell [0;32mIn[1], line 7[0m
[1;32m      4[0m [38;5;28;01mimport[39;00m [38;5;21;01mnumpy[39;00m [38;5;28;01mas[39;00m [38;5;21;01mnp[39;00m
[1;32m      5[0m [38;5;28;01mimport[39;00m [38;5;21;01mpandas[39;00m [38;5;28;01mas[39;00m [38;5;21;01mpd[39;00m
[0;32m----> 7[0m [38;5;28;01mclass[39;00m [38;5;21;01mEmulatedInstrument[39;00m([43mlb[49m[38;5;241;43m.[39;49m[43mEmulatedVISADevice[49m):
[1;32m      8[0m [38;5;250m    [39m[38;5;124;03m""" This "instrument" makes mock data and instrument states to[39;00m
[1;32m      9[0m [38;5;124;03m        demonstrate we can show the process of setting[39;00m
[1;32m     10[0m [38;5;124;03m        up a measurement.[39;00m
[1;32m     11[0m [38;5;124;03m    """[39;00m
[1;32m     12[0m     [38;5;28;01mclass[39;00m [38;5;21;01mstate[39;00m (lb[38;5;241m.[39mEmulatedVISADevice[38;5;241m.[39mstate):

[0;31mAttributeError[0m: module 'labbench' has no attribute 'EmulatedVISADevice'

